/**
 * Generated by orval v7.10.0 🍺
 * Do not edit manually.
 * Ticketnode API
 * OpenAPI spec version: 1.0.0
 */
import { customInstance } from '../mutators/tickets';
export interface Ticket {
  id: string;
  name: string;
  description?: string;
  price: number;
  availableQuantity: number;
}

export interface PurchaseResponse {
  orderId: string;
  checkoutUrl: string;
}

export interface ErrorResponse {
  code: string;
  message: string;
}

/**
 * Get available ticket types for an event
 */
export const getGetEventTicketsUrl = (eventId: string) => {
  return `/events/${eventId}/tickets`;
};

export const getEventTickets = async (
  eventId: string,
  options?: RequestInit
): Promise<Ticket[]> => {
  return customInstance<Ticket[]>(getGetEventTicketsUrl(eventId), {
    ...options,
    method: 'GET',
  });
};

/**
 * Purchase event tickets
 */
export const getPurchaseTicketsUrl = (eventId: string) => {
  return `/events/${eventId}/tickets/purchase`;
};

export const purchaseTickets = async (
  eventId: string,
  options?: RequestInit
): Promise<PurchaseResponse> => {
  return customInstance<PurchaseResponse>(getPurchaseTicketsUrl(eventId), {
    ...options,
    method: 'POST',
  });
};
